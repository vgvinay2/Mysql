OrderDetails |
+---------+--------+
| orderNumber |
| quantityOrdered |
| requiredDate |
| priceEach |
| orderLineNumber |

create table Orders (
orderNumber INT,
orderDate DATE,
requiredDate DATE,
shippedDate DATE,
status VARCHAR(20),
comment VARCHAR(20),
customerNumber INT,
primary key(orderNumber)
);


create table OrderDetails (
orderNumber INT,
quantityOrdered INT,
requiredDate DATE,
priceEach INT,
FOREIGN KEY (orderNumber) REFERENCES Orders(orderNumber)
);


insert into Orders values (1,'2012-08-01','2012-08-05','2012-08-03',"shipped","ok",123);
insert into Orders values (2,'2012-07-01','2012-07-05','2012-07-03',"shipped","ok",124);
insert into Orders values (3,'2012-06-01','2012-06-05','2012-06-03',"shipped","ok",125);
insert into Orders values (4,'2012-05-01','2012-05-05','2012-05-03',"shipped","ok",126);
insert into Orders values (5,'2012-04-01','2012-04-05','2012-04-03',"shipped","ok",127);




insert into OrderDetails values (1,50,'2012-08-05',20);
insert into OrderDetails values (1,30,'2012-08-05',50);
insert into OrderDetails values (1,50,'2012-08-05',70);
insert into OrderDetails values (2,70,'2012-08-05',20);
insert into OrderDetails values (2,150,'2012-08-05',10);
insert into OrderDetails values (2,200,'2012-08-05',100);
insert into OrderDetails values (3,30,'2012-08-05',40);
insert into OrderDetails values (4,80,'2012-08-05',50);
insert into OrderDetails values (4,70,'2012-08-05',60);
insert into OrderDetails values (5,10,'2012-08-05',200);




a) Get all orders, number of items sold and total values in each order

b) what order has total value greater than $5000

c)what order has total value greater than $5000 and has more than 2 items in it


ans 1
select o.orderNumber,count(od.priceEach) as Total_Items,sum(od.quantityOrdered*od.priceEach) as Total_value
from OrderDetails od,Orders o
where od.orderNumber=o.orderNumber
group by od.orderNumber;


ans 2
select o.orderNumber,sum(od.quantityOrdered*od.priceEach) as Total_value
from OrderDetails od,Orders o
where od.orderNumber=o.orderNumber
group by od.orderNumber
having total_value>5000;

ans 3
select o.orderNumber,sum(od.quantityOrdered*od.priceEach) as Total_value
from OrderDetails od,Orders o
where od.orderNumber=o.orderNumber
group by od.orderNumber
having total_value>5000 and count(od.priceEach)>2;

